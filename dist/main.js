(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(537),o=n.n(r),s=n(645),a=n.n(s)()(o());a.push([e.id,":root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n}\n\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-div{\n  display: flex;\n \n\n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n   border-style: none;\n  }\n\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\n\n.editable:focus {\n  border: 2px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,gCAAgC;AAClC;;AAEA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,aAAa;EACf;EACA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;EACpB;EACA;IACE,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,aAAa;EACf;;AAEF;;EAEE,aAAa;EACb,SAAS;EACT,sBAAsB;AACxB;EACE;IACE,uBAAuB;IACvB,aAAa;IACb,8BAA8B;GAC/B,YAAY;;EAEb;AACF;EACE,aAAa;;;AAGf;EACE,yCAAyC;EACzC;;GAEC,kBAAkB;EACnB;;AAEF;EACE,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,oCAAoC;;AAEtC;;AAEA;EACE,eAAe;AACjB",sourcesContent:[":root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n}\n\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-div{\n  display: flex;\n \n\n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n   border-style: none;\n  }\n\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\n\n.editable:focus {\n  border: 2px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,s){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(a[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&a[l[0]]||(void 0!==s&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=s),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(o," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},a=[],c=0;c<e.length;c++){var i=e[c],d=r.base?i[0]+r.base:i[0],l=s[d]||0,u="".concat(d," ").concat(l);s[d]=l+1;var p=n(u),A={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(A);else{var f=o(A,r);r.byIndex=c,t.splice(c,0,{identifier:u,updater:f,references:1})}a.push(u)}return a}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var s=r(e=e||[],o=o||{});return function(e){e=e||[];for(var a=0;a<s.length;a++){var c=n(s[a]);t[c].references--}for(var i=r(e,o),d=0;d<s.length;d++){var l=n(s[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}s=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),s=n(569),a=n.n(s),c=n(565),i=n.n(c),d=n(216),l=n.n(d),u=n(589),p=n.n(u),A=n(28),f={};f.styleTagTransform=p(),f.setAttributes=i(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),t()(A.Z,f),A.Z&&A.Z.locals&&A.Z.locals;class m{constructor(e,t){this.title=e,this.dueDate=t,this.doneStatus=!1,this.id=crypto.randomUUID()}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}JSON.parse(localStorage.getItem("storageTaskArr"))?.map((e=>Object.assign(new m,e)));const h=document.querySelector(".rendered-tasks");console.log(h);class g{constructor(e,t){this.title=e,this.dueDate=t,this.doneStatus=!1,this.id=crypto.randomUUID(),this.task=[]}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}const v=JSON.parse(localStorage.getItem("storageProjectsArr"))?.map((e=>Object.assign(new g,e)))??[],C=document.querySelector(".task-section"),y=document.createElement("div");function E(e){const t=n=>{const r=document.createElement("div");r.classList.add("rendered-div"),r.setAttribute("id",`${n.id}`),y.appendChild(r);const o=document.createElement("input");o.classList.add("rendered-task-title"),o.setAttribute("readonly","readonly"),o.value=n.title,r.appendChild(o),o.addEventListener("dblclick",(()=>{o.classList.add("editable"),o.focus(),o.readOnly=!1})),o.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),s.click())}));const s=document.createElement("button");s.textContent="edit",r.appendChild(s),s.addEventListener("click",(()=>{for(function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(o,n);y.firstChild;)y.firstChild.remove();e.task.forEach(t)}));const a=document.createElement("button");a.textContent="delete",r.appendChild(a);const c=n.id;a.addEventListener("click",(()=>{for(function(t){const n=e.task.findIndex((e=>e.id===t));e.task.splice(n,1),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(c);y.firstChild;)y.firstChild.remove();e.task.forEach(t)}));const i=document.createElement("input");i.setAttribute("type","checkbox"),n.doneStatus&&i.setAttribute("checked","checked"),r.appendChild(i),i.addEventListener("click",(()=>{console.log(n),function(e){e.doneStatus=!e.doneStatus}(n),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}))};for(;y.firstChild;)y.firstChild.remove();e.task.forEach(t)}y.classList.add("rendered-tasks");const b=document.querySelector(".project-section"),k=document.querySelector(".rendered-projects"),S=document.querySelector(".project-form");function x(e){const t=document.createElement("div");t.classList.add("rendered-div"),k.appendChild(t),t.classList.add("project-rendered"),t.setAttribute("id",`${e.id}`);const n=document.createElement("input");n.setAttribute("readonly","readonly"),n.value=e.title,n.classList.add("rendered-project-title","rendered-title"),t.appendChild(n),n.addEventListener("dblclick",(()=>{n.classList.add("editable"),n.focus(),n.readOnly=!1})),t.addEventListener("click",(()=>{!function(e){for(;C.firstChild;)C.firstChild.remove();!function(e){const t=document.createElement("h2");t.textContent=e.title,C.appendChild(t);const n=document.createElement("form");C.appendChild(n);const r=document.createElement("input");r.classList.add("task-title"),n.appendChild(r);const o=document.createElement("input");o.setAttribute("type","date"),o.classList.add("task-date"),n.appendChild(o);const s=document.createElement("button");s.classList.add("task-button"),s.textContent="add",n.appendChild(s),C.appendChild(y),s.addEventListener("click",(t=>{t.preventDefault(),""!==r.value&&(function(e){const t=document.querySelector(".task-title").value,n=document.querySelector(".task-date").value,r=new m(t,n);console.log(v),e.task.push(r),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(e),E(e)),r.value=""}))}(e)}(e),E(e)}));const r=document.createElement("button");r.textContent="edit",r.addEventListener("click",(()=>{!function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(n,e),j()})),n.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),r.click())})),t.appendChild(r);const o=document.createElement("button");o.textContent="delete",t.appendChild(o);const s=document.createElement("input");s.setAttribute("type","checkbox"),e.doneStatus&&s.setAttribute("checked","checked"),t.appendChild(s),s.addEventListener("click",(()=>{e.toggleDoneStatus(),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}));const a=e.id;o.addEventListener("click",(()=>{!function(e){const t=v.findIndex((t=>t.id===e));v.splice(t,1),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(a),j()}))}function j(){for(;k.firstChild;)k.firstChild.remove();console.log(v),v.forEach(x)}b.appendChild(S),b.appendChild(k);const B=document.querySelector(".add-btn"),I=document.querySelector(".project-title");j(),B.addEventListener("click",(e=>{e.preventDefault(),""!==I.value&&(function(){const e=document.querySelector(".project-title").value,t=document.querySelector(".project-date").value,n=new g(e,t);v.push(n),console.log(n),localStorage.setItem("storageProjectsArr",JSON.stringify(v))}(),j(),I.value="")})),I.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),B.click())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,