(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>g});var r=t(537),o=t.n(r),a=t(645),d=t.n(a),i=t(667),s=t.n(i),c=new URL(t(613),t.b),A=new URL(t(53),t.b),l=new URL(t(833),t.b),p=d()(o()),u=s()(c),m=s()(A),C=s()(l);p.push([e.id,":root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104)\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n box-sizing: border-box;\n/* border: 1px solid salmon; */\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.main-container {\n    width: 70rem;\n    background-color: rgb(255, 255, 255);\n    height:45rem;\n    border-radius: 1rem;\n    padding: 1.5rem;\n   \nbox-shadow: rgba(169, 174, 183, 0.5) 1px 1px 2px 2px;\n\n  }\n  h1 {\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  h1:hover{\n    zoom: 120%;\n  }\n  .project-section {\n    /* overflow: scroll; */\n    background-color:white;\n   height: 100%;\n   display: flex;\n   flex-direction: column;\n   gap: 1rem;\n   padding: 1rem;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    gap: 1rem;\n   /* height: 100%; */\n   \n  }\n.rendered-task,\n.rendered-project{\n \n  display: flex;\n  align-items: center;\n  \n  width: 23rem;\n  height: min-content;\n  border-radius: .3rem;\n  padding: .3rem;\n gap: .5rem;\n}\n.checkbox-checked{\n  text-decoration: line-through;\n}\n.rendered-task:hover,\n.rendered-project:hover{\n/* box-shadow: 1px .1px 1px 2px rgb(199, 199, 199); */\nbox-shadow: rgba(169, 174, 183, 0.5) 0px 1px 2px 0px;\n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 20rem;\n  }\n  .task-section{\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n  }\n \n  /* task box containing title&notes&date */\n.title-box{\nwidth: 15rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n\n}\n.rendered-notes{\n  color: var(--grey);\n}\n.rendered-date {\n  color: var(--grey);\n  font-size: .8rem;\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  border-style: none;\n \n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("+u+");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("+m+');\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n border-radius: .2rem;\n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\npadding: .3rem;\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  box-sizing: content-box; \n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n  width: 12rem;\n  height: 10rem;\n }\ntextarea {\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n\n  height: 8rem;\n}\ntextarea:focus{\n  outline: none;\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n}\n\n.edit-btn {\n  display: none;\n}\n.delete-btn{\n  background-image: url('+C+");\n  background-repeat: no-repeat;\n  min-width: 1rem;\n  min-height: 1rem;\n}\n","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,gCAAgC;EAChC;AACF;AACA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;;AAEX;AACA;CACC,sBAAsB;AACvB,8BAA8B;AAC9B;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;IACI,YAAY;IACZ,oCAAoC;IACpC,YAAY;IACZ,mBAAmB;IACnB,eAAe;;AAEnB,oDAAoD;;EAElD;EACA;IACE,SAAS;IACT,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;EACpB;EACA;IACE,UAAU;EACZ;EACA;IACE,sBAAsB;IACtB,sBAAsB;GACvB,YAAY;GACZ,aAAa;GACb,sBAAsB;GACtB,SAAS;GACT,aAAa;EACd;;EAEA;IACE,aAAa;IACb,SAAS;EACX;;AAEF;;EAEE,aAAa;EACb,SAAS;EACT,sBAAsB;AACxB;;EAEE;IACE,uBAAuB;IACvB,aAAa;IACb,8BAA8B;IAC9B,SAAS;GACV,kBAAkB;;EAEnB;AACF;;;EAGE,aAAa;EACb,mBAAmB;;EAEnB,YAAY;EACZ,mBAAmB;EACnB,oBAAoB;EACpB,cAAc;CACf,UAAU;AACX;AACA;EACE,6BAA6B;AAC/B;AACA;;AAEA,qDAAqD;AACrD,oDAAoD;AACpD;EACE,yCAAyC;EACzC;;IAEE,eAAe;GAChB,kBAAkB;EACnB,YAAY;EACZ;EACA;IACE,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,SAAS;;EAEX;;EAEA,yCAAyC;AAC3C;AACA,YAAY;AACZ,yBAAyB;AACzB;AACA;;EAEE,SAAS;;AAEX;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,mBAAmB;EACnB,0CAA0C;AAC5C;AACA;EACE,kBAAkB;;AAEpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,yDAAqC;EACrC,4BAA4B;EAC5B,kBAAkB;EAClB,8FAA8F;AAChG;AACA;EACE,yDAA4C;EAC5C,4BAA4B;AAC9B;AACA;EACE,oCAAoC;CACrC,oBAAoB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA,WAAW;AACX,yBAAyB;AACzB,cAAc;;AAEd;AACA;EACE,UAAU;AACZ;AACA;EACE,uBAAuB;EACvB,8BAA8B;EAC9B,oBAAoB;EACpB,YAAY;EACZ,aAAa;CACd;AACD;EACE,8BAA8B;EAC9B,oBAAoB;;EAEpB,YAAY;AACd;AACA;EACE,aAAa;EACb,8BAA8B;EAC9B,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;AACA;EACE,yDAA+C;EAC/C,4BAA4B;EAC5B,eAAe;EACf,gBAAgB;AAClB",sourcesContent:[':root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104)\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n box-sizing: border-box;\n/* border: 1px solid salmon; */\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.main-container {\n    width: 70rem;\n    background-color: rgb(255, 255, 255);\n    height:45rem;\n    border-radius: 1rem;\n    padding: 1.5rem;\n   \nbox-shadow: rgba(169, 174, 183, 0.5) 1px 1px 2px 2px;\n\n  }\n  h1 {\n    margin: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  h1:hover{\n    zoom: 120%;\n  }\n  .project-section {\n    /* overflow: scroll; */\n    background-color:white;\n   height: 100%;\n   display: flex;\n   flex-direction: column;\n   gap: 1rem;\n   padding: 1rem;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    gap: 1rem;\n   /* height: 100%; */\n   \n  }\n.rendered-task,\n.rendered-project{\n \n  display: flex;\n  align-items: center;\n  \n  width: 23rem;\n  height: min-content;\n  border-radius: .3rem;\n  padding: .3rem;\n gap: .5rem;\n}\n.checkbox-checked{\n  text-decoration: line-through;\n}\n.rendered-task:hover,\n.rendered-project:hover{\n/* box-shadow: 1px .1px 1px 2px rgb(199, 199, 199); */\nbox-shadow: rgba(169, 174, 183, 0.5) 0px 1px 2px 0px;\n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 20rem;\n  }\n  .task-section{\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n  }\n \n  /* task box containing title&notes&date */\n.title-box{\nwidth: 15rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n\n}\n.rendered-notes{\n  color: var(--grey);\n}\n.rendered-date {\n  color: var(--grey);\n  font-size: .8rem;\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  border-style: none;\n \n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("svg/plus.svg");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("svg/plus-circle.svg");\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n border-radius: .2rem;\n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\npadding: .3rem;\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  box-sizing: content-box; \n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n  width: 12rem;\n  height: 10rem;\n }\ntextarea {\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n\n  height: 8rem;\n}\ntextarea:focus{\n  outline: none;\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n}\n\n.edit-btn {\n  display: none;\n}\n.delete-btn{\n  background-image: url("svg/delete-outline.svg");\n  background-repeat: no-repeat;\n  min-width: 1rem;\n  min-height: 1rem;\n}\n'],sourceRoot:""}]);const g=p},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(d[s]=!0)}for(var c=0;c<e.length;c++){var A=[].concat(e[c]);r&&d[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),n.push(A))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},d=[],i=0;i<e.length;i++){var s=e[i],c=r.base?s[0]+r.base:s[0],A=a[c]||0,l="".concat(c," ").concat(A);a[c]=A+1;var p=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var m=o(u,r);r.byIndex=i,n.splice(i,0,{identifier:l,updater:m,references:1})}d.push(l)}return d}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var d=0;d<a.length;d++){var i=t(a[d]);n[i].references--}for(var s=r(e,o),c=0;c<a.length;c++){var A=t(a[c]);0===n[A].references&&(n[A].updater(),n.splice(A,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},833:(e,n,t)=>{e.exports=t.p+"de0bb67a90c508546224.svg"},53:(e,n,t)=>{e.exports=t.p+"057fbbe813d06c74ac0c.svg"},613:(e,n,t)=>{e.exports=t.p+"3cffe9a515498593b872.svg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),d=t.n(a),i=t(565),s=t.n(i),c=t(216),A=t.n(c),l=t(589),p=t.n(l),u=t(28),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=d().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),n()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;class C{constructor(e,n){this.title=e,this.dueDate=n,this.doneStatus=!1,this.id=crypto.randomUUID(),this.task=[]}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}const g=JSON.parse(localStorage.getItem("storageProjectsArr"))?.map((e=>Object.assign(new C,e)))??[];class b extends C{constructor(e,n){super(e,n),this.dueDate="",this.notes=""}}const h=document.querySelector(".task-section"),f=document.createElement("div");function E(e){for(;h.firstChild;)h.firstChild.remove();!function(e){const n=document.createElement("h2");n.textContent=e.title,h.appendChild(n);const t=document.createElement("form");h.appendChild(t);const r=document.createElement("button");r.classList.add("task-title"),r.textContent="add",t.appendChild(r);const o=document.createElement("input");o.setAttribute("placeholder","Add a task"),o.classList.add("task-input"),t.appendChild(o),h.appendChild(f),r.addEventListener("click",(n=>{n.preventDefault(),""!==o.value&&(function(e){const n=document.querySelector(".task-input").value,t=new b(n);console.log(g),e.task.push(t),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(e),v(e)),o.value=""}))}(e)}function v(e){const n=n=>{const r=document.createElement("div");r.classList.add("rendered-task"),r.setAttribute("id",`${n.id}`),f.prepend(r);const o=document.createElement("input");o.setAttribute("type","checkbox"),n.doneStatus&&o.setAttribute("checked","checked"),r.appendChild(o),o.addEventListener("click",(()=>{!function(e){e.doneStatus=!e.doneStatus}(n),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}));const a=document.createElement("div");a.classList.add("title-box"),r.appendChild(a);const d=document.createElement("input");d.classList.add("rendered-task-title"),d.setAttribute("readonly","readonly"),d.value=n.title,a.appendChild(d),d.addEventListener("dblclick",(()=>{d.classList.add("editable"),d.focus(),d.readOnly=!1})),d.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),c.click())}));const i=document.createElement("p");i.classList.add("rendered-notes"),a.appendChild(i);const s=document.createElement("p");s.classList.add("rendered-date"),a.appendChild(s);const c=document.createElement("button");c.textContent="edit",c.classList.add("edit-btn"),r.appendChild(c),c.addEventListener("click",(()=>{!function(e,n){n.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(d,n),t(e)}));const A=document.createElement("img");A.classList.add("delete-btn"),r.appendChild(A);const l=n.id;r.addEventListener("click",(n=>{"delete-btn"===n.target.className&&(n.target.closest(".rendered-task"),function(n){const t=e.task.findIndex((e=>e.id===n));e.task.splice(t,1),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(l),t(e))}));const p=document.createElement("div");p.textContent="details",p.classList.add("notes-div"),r.appendChild(p);const u=document.createElement("dialog");u.classList.add("modal"),document.body.appendChild(u);const m=document.createElement("div");u.appendChild(m);const C=document.createElement("form");C.classList.add("notes-form"),m.appendChild(C);const b=document.createElement("textarea");b.textContent=`${n.notes}`,C.appendChild(b);const h=document.createElement("input");h.classList.add("date-input"),h.setAttribute("type","date"),h.value=`${n.dueDate}`,C.appendChild(h);const E=document.createElement("button");E.textContent="confirm",C.appendChild(E),p.addEventListener("click",(()=>{u.showModal()})),E.addEventListener("click",(e=>{e.preventDefault();let t=b.value;!function(e,n){e.notes=n,localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(n,t);var r;r=h.value,n.dueDate=r,localStorage.setItem("storageProjectsArr",JSON.stringify(g)),console.log(n),u.close(),B(n,i),y(n,s)})),B(n,i),y(n,s)};function t(e){for(;f.firstChild;)f.firstChild.remove();e.task.forEach(n)}t(e)}function B(e,n){""!==e.notes&&(n.textContent=`${e.notes}`)}function y(e,n){""!==e.dueDate&&(n.textContent=`${e.dueDate}`)}f.classList.add("rendered-tasks");const x=document.querySelector(".project-section"),k=document.querySelector(".rendered-projects"),S=document.querySelector(".project-form");function w(e){const n=document.createElement("div");n.classList.add("rendered-project"),k.prepend(n);const t=document.createElement("input");t.setAttribute("type","checkbox"),e.doneStatus&&t.setAttribute("checked","checked"),n.appendChild(t),n.classList.add("project-rendered"),n.setAttribute("id",`${e.id}`);const r=document.createElement("input");r.setAttribute("readonly","readonly"),r.value=e.title,r.classList.add("rendered-project-title","rendered-title"),n.appendChild(r),r.addEventListener("dblclick",(()=>{r.classList.add("editable"),r.focus(),r.readOnly=!1})),n.addEventListener("click",(n=>{(n.target==n.currentTarget||"rendered-project-title"===n.target.className)&&(E(e),v(e))}));const o=document.createElement("button");o.classList.add("project-edit-btn"),o.textContent="edit",o.addEventListener("click",(()=>{!function(e,n){n.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(r,e),j()})),r.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),o.click())})),n.appendChild(o);const a=document.createElement("button");a.textContent="delete",n.appendChild(a),t.addEventListener("click",(n=>{n.stopPropagation(),e.toggleDoneStatus(),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}));const d=e.id;a.addEventListener("click",(()=>{!function(e){const n=g.findIndex((n=>n.id===e));g.splice(n,1),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(d),j()}))}function j(){for(;k.firstChild;)k.firstChild.remove();console.log(g),g.forEach(w)}x.appendChild(S),x.appendChild(k);const I=document.querySelector(".add-btn"),L=document.querySelector(".project-title");j(),I.addEventListener("click",(e=>{e.preventDefault(),""!==L.value&&(function(){const e=document.querySelector(".project-title").value,n=document.querySelector(".project-date").value,t=new C(e,n);g.push(t),console.log(t),localStorage.setItem("storageProjectsArr",JSON.stringify(g))}(),j(),L.value="")})),L.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),I.click())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,