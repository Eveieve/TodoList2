(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>C});var r=n(537),o=n.n(r),a=n(645),s=n.n(a),c=n(667),i=n.n(c),d=new URL(n(613),n.b),l=new URL(n(53),n.b),A=new URL(n(833),n.b),u=s()(o()),p=i()(d),m=i()(l),h=i()(A);u.push([e.id,":root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104)\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n/* * {\n  border: 2px solid salmon;\n\n} */\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-task,\n.rendered-project{\n  \n  display: flex;\n  align-items: center; \n  width: 20rem;\n \n}\n\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 20rem;\n  }\n  \n  /* task box containing title&notes&date */\n.title-box{\nwidth: 20rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n\n}\n.rendered-notes{\n  color: var(--grey);\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  border-style: none;\n \n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("+p+");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("+m+');\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  width: 12rem;\n  height: 10rem;\n }\n\n.edit-btn {\n  display: none;\n}\n.delete-btn {\n  background-image: url('+h+");\n  background-repeat: no-repeat;\n  min-width: 1rem;\n  min-height: 1rem;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,gCAAgC;EAChC;AACF;AACA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;;AAEX;AACA;;;GAGG;AACH;IACI,gBAAgB;IAChB,oCAAoC;IACpC,aAAa;EACf;EACA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;EACpB;EACA;IACE,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,aAAa;IACb,SAAS;EACX;;AAEF;;EAEE,aAAa;EACb,SAAS;EACT,sBAAsB;AACxB;;EAEE;IACE,uBAAuB;IACvB,aAAa;IACb,8BAA8B;GAC/B,YAAY;;EAEb;AACF;;;EAGE,aAAa;EACb,mBAAmB;EACnB,YAAY;;AAEd;;EAEE,yCAAyC;EACzC;;IAEE,eAAe;GAChB,kBAAkB;EACnB,YAAY;EACZ;;EAEA,yCAAyC;AAC3C;AACA,YAAY;AACZ,yBAAyB;AACzB;AACA;;EAEE,SAAS;;AAEX;AACA;EACE,kBAAkB;AACpB;AACA;EACE,mBAAmB;EACnB,0CAA0C;AAC5C;AACA;EACE,kBAAkB;;AAEpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,yDAAqC;EACrC,4BAA4B;EAC5B,kBAAkB;EAClB,8FAA8F;AAChG;AACA;EACE,yDAA4C;EAC5C,4BAA4B;AAC9B;AACA;EACE,oCAAoC;;AAEtC;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA,WAAW;AACX,yBAAyB;;AAEzB;AACA;EACE,UAAU;AACZ;AACA;EACE,YAAY;EACZ,aAAa;CACd;;AAED;EACE,aAAa;AACf;AACA;EACE,yDAA+C;EAC/C,4BAA4B;EAC5B,eAAe;EACf,gBAAgB;AAClB",sourcesContent:[':root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104)\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n/* * {\n  border: 2px solid salmon;\n\n} */\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-task,\n.rendered-project{\n  \n  display: flex;\n  align-items: center; \n  width: 20rem;\n \n}\n\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 20rem;\n  }\n  \n  /* task box containing title&notes&date */\n.title-box{\nwidth: 20rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n\n}\n.rendered-notes{\n  color: var(--grey);\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  border-style: none;\n \n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("svg/plus.svg");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("svg/plus-circle.svg");\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  width: 12rem;\n  height: 10rem;\n }\n\n.edit-btn {\n  display: none;\n}\n.delete-btn {\n  background-image: url("svg/delete-outline.svg");\n  background-repeat: no-repeat;\n  min-width: 1rem;\n  min-height: 1rem;\n}'],sourceRoot:""}]);const C=u},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(s[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},s=[],c=0;c<e.length;c++){var i=e[c],d=r.base?i[0]+r.base:i[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var u=n(A),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=o(p,r);r.byIndex=c,t.splice(c,0,{identifier:A,updater:m,references:1})}s.push(A)}return s}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var c=n(a[s]);t[c].references--}for(var i=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},833:(e,t,n)=>{e.exports=n.p+"de0bb67a90c508546224.svg"},53:(e,t,n)=>{e.exports=n.p+"057fbbe813d06c74ac0c.svg"},613:(e,t,n)=>{e.exports=n.p+"3cffe9a515498593b872.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),s=n.n(a),c=n(565),i=n.n(c),d=n(216),l=n.n(d),A=n(589),u=n.n(A),p=n(28),m={};m.styleTagTransform=u(),m.setAttributes=i(),m.insert=s().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class h{constructor(e,t){this.title=e,this.dueDate=t,this.doneStatus=!1,this.id=crypto.randomUUID(),this.task=[]}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}const C=JSON.parse(localStorage.getItem("storageProjectsArr"))?.map((e=>Object.assign(new h,e)))??[];class g extends h{constructor(e,t){super(e,t),this.dueDate="",this.notes=""}}const f=document.querySelector(".task-section"),b=document.createElement("div");function E(e){const t=t=>{const r=document.createElement("div");r.classList.add("rendered-task"),r.setAttribute("id",`${t.id}`),b.prepend(r);const o=document.createElement("input");o.setAttribute("type","checkbox"),t.doneStatus&&o.setAttribute("checked","checked"),r.appendChild(o),o.addEventListener("click",(()=>{!function(e){e.doneStatus=!e.doneStatus}(t),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}));const a=document.createElement("div");a.classList.add("title-box"),r.appendChild(a);const s=document.createElement("input");s.classList.add("rendered-task-title"),s.setAttribute("readonly","readonly"),s.value=t.title,a.appendChild(s),s.addEventListener("dblclick",(()=>{s.classList.add("editable"),s.focus(),s.readOnly=!1})),s.addEventListener("click",(()=>{o.click()})),s.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),d.click())}));const c=document.createElement("p");c.classList.add("rendered-notes"),a.appendChild(c);const i=document.createElement("p");i.classList.add("rendered-date"),a.appendChild(i);const d=document.createElement("button");d.textContent="edit",d.classList.add("edit-btn"),r.appendChild(d),d.addEventListener("click",(()=>{!function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(s,t),n(e)}));const l=document.createElement("button");l.classList.add("delete-btn"),r.appendChild(l);const A=t.id;r.addEventListener("click",(t=>{"delete-btn"===t.target.className&&(t.target.closest(".rendered-task"),function(t){const n=e.task.findIndex((e=>e.id===t));e.task.splice(n,1),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(A),n(e))}));const u=document.createElement("div");u.textContent="details",u.classList.add("notes-div"),r.appendChild(u);const p=document.createElement("dialog");p.classList.add("modal"),document.body.appendChild(p);const m=document.createElement("div");p.appendChild(m);const h=document.createElement("form");h.classList.add("notes-form"),m.appendChild(h);const g=document.createElement("textarea");g.textContent=`${t.notes}`,h.appendChild(g);const f=document.createElement("input");f.classList.add("date-input"),f.setAttribute("type","date"),f.value=`${t.dueDate}`,h.appendChild(f);const E=document.createElement("button");E.textContent="confirm",h.appendChild(E),u.addEventListener("click",(()=>{p.showModal()})),E.addEventListener("click",(e=>{e.preventDefault();let n=g.value;!function(e,t){e.notes=t,localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(t,n);var r;r=f.value,t.dueDate=r,localStorage.setItem("storageProjectsArr",JSON.stringify(C)),console.log(t),p.close(),v(t,c),y(t,i)})),v(t,c),y(t,i)};function n(e){for(;b.firstChild;)b.firstChild.remove();e.task.forEach(t)}n(e)}function v(e,t){""!==e.notes&&(t.textContent=`${e.notes}`)}function y(e,t){""!==e.dueDate&&(t.textContent=`${e.dueDate}`)}b.classList.add("rendered-tasks");const k=document.querySelector(".project-section"),B=document.querySelector(".rendered-projects"),x=document.querySelector(".project-form");function S(e){const t=document.createElement("div");t.classList.add("rendered-project"),B.prepend(t);const n=document.createElement("input");n.setAttribute("type","checkbox"),e.doneStatus&&n.setAttribute("checked","checked"),t.appendChild(n),t.classList.add("project-rendered"),t.setAttribute("id",`${e.id}`);const r=document.createElement("input");r.setAttribute("readonly","readonly"),r.value=e.title,r.classList.add("rendered-project-title","rendered-title"),t.appendChild(r),r.addEventListener("dblclick",(()=>{r.classList.add("editable"),r.focus(),r.readOnly=!1})),t.addEventListener("click",(()=>{!function(e){for(;f.firstChild;)f.firstChild.remove();!function(e){const t=document.createElement("h2");t.textContent=e.title,f.appendChild(t);const n=document.createElement("form");f.appendChild(n);const r=document.createElement("button");r.classList.add("task-title"),r.textContent="add",n.appendChild(r);const o=document.createElement("input");o.setAttribute("placeholder","Add a task"),o.classList.add("task-input"),n.appendChild(o),f.appendChild(b),r.addEventListener("click",(t=>{t.preventDefault(),""!==o.value&&(function(e){const t=document.querySelector(".task-input").value,n=new g(t);console.log(C),e.task.push(n),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(e),E(e)),o.value=""}))}(e)}(e),E(e)}));const o=document.createElement("button");o.textContent="edit",o.addEventListener("click",(()=>{!function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(r,e),w()})),r.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),o.click())})),t.appendChild(o);const a=document.createElement("button");a.textContent="delete",t.appendChild(a),n.addEventListener("click",(t=>{t.stopPropagation(),e.toggleDoneStatus(),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}));const s=e.id;a.addEventListener("click",(()=>{!function(e){const t=C.findIndex((t=>t.id===e));C.splice(t,1),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(s),w()}))}function w(){for(;B.firstChild;)B.firstChild.remove();console.log(C),C.forEach(S)}k.appendChild(x),k.appendChild(B);const j=document.querySelector(".add-btn"),L=document.querySelector(".project-title");w(),j.addEventListener("click",(e=>{e.preventDefault(),""!==L.value&&(function(){const e=document.querySelector(".project-title").value,t=document.querySelector(".project-date").value,n=new h(e,t);C.push(n),console.log(n),localStorage.setItem("storageProjectsArr",JSON.stringify(C))}(),w(),L.value="")})),L.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),j.click())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,