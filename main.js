(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,':root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n  border: 2px solid salmon;\n\n}\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-div{\n  display: flex;\n  align-items: center; \n\n}\n\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n   border-style: none;\n   /* height: 3rem; */\n  }\n.title-box{\nwidth: 20rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\n\n.editable:focus {\n  border: 2px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 4em;\naccent-color: var(--blue);\n}\n\n.modal{\n  width: 12rem;\n  height: 10rem;\n }\n\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,gCAAgC;AAClC;AACA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;;AAEX;AACA;EACE,wBAAwB;;AAE1B;AACA;IACI,gBAAgB;IAChB,oCAAoC;IACpC,aAAa;EACf;EACA;IACE,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kBAAkB;EACpB;EACA;IACE,sBAAsB;IACtB,YAAY;EACd;;EAEA;IACE,aAAa;EACf;;AAEF;;EAEE,aAAa;EACb,SAAS;EACT,sBAAsB;AACxB;;EAEE;IACE,uBAAuB;IACvB,aAAa;IACb,8BAA8B;GAC/B,YAAY;;EAEb;AACF;EACE,aAAa;EACb,mBAAmB;;AAErB;;EAEE,yCAAyC;EACzC;;GAEC,kBAAkB;GAClB,kBAAkB;EACnB;AACF;AACA,YAAY;AACZ,yBAAyB;AACzB;AACA;;EAEE,SAAS;AACX;AACA;EACE,mBAAmB;EACnB,0CAA0C;AAC5C;;AAEA;EACE,oCAAoC;;AAEtC;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA,UAAU;AACV,yBAAyB;AACzB;;AAEA;EACE,YAAY;EACZ,aAAa;CACd",sourcesContent:[':root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n  border: 2px solid salmon;\n\n}\n.main-container {\n    min-width: 10rem;\n    background-color: rgb(255, 255, 255);\n    height: 30rem;\n  }\n  h1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--blue);\n  }\n  .project-section {\n    background-color:white;\n    height: 100%;\n  }\n  \n  .project-form {\n    display: flex;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 3fr;\n   height: 100%;\n   \n  }\n.rendered-div{\n  display: flex;\n  align-items: center; \n\n}\n\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n   border-style: none;\n   /* height: 3rem; */\n  }\n.title-box{\nwidth: 20rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n}\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\n\n.editable:focus {\n  border: 2px solid rgb(124, 164, 250);\n \n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 4em;\naccent-color: var(--blue);\n}\n\n.modal{\n  width: 12rem;\n  height: 10rem;\n }\n\n'],sourceRoot:""}]);const s=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&c[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),t.push(l))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],s=0;s<e.length;s++){var i=e[s],d=r.base?i[0]+r.base:i[0],l=a[d]||0,u="".concat(d," ").concat(l);a[d]=l+1;var A=n(u),p={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==A)t[A].references++,t[A].updater(p);else{var m=o(p,r);r.byIndex=s,t.splice(s,0,{identifier:u,updater:m,references:1})}c.push(u)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var s=n(a[c]);t[s].references--}for(var i=r(e,o),d=0;d<a.length;d++){var l=n(a[d]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}a=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),s=n(565),i=n.n(s),d=n(216),l=n.n(d),u=n(589),A=n.n(u),p=n(28),m={};m.styleTagTransform=A(),m.setAttributes=i(),m.insert=c().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=l(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;class f{constructor(e,t){this.title=e,this.dueDate=t,this.doneStatus=!1,this.id=crypto.randomUUID(),this.task=[]}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}const h=JSON.parse(localStorage.getItem("storageProjectsArr"))?.map((e=>Object.assign(new f,e)))??[];class C extends f{constructor(e,t,n){super(e,t),this.notes=n}}const g=document.querySelector(".task-section"),E=document.createElement("div");function v(e){const t=t=>{const r=document.createElement("div");r.classList.add("rendered-div"),r.setAttribute("id",`${t.id}`),E.prepend(r);const o=document.createElement("input");o.setAttribute("type","checkbox"),t.doneStatus&&o.setAttribute("checked","checked"),r.appendChild(o),o.addEventListener("click",(()=>{!function(e){e.doneStatus=!e.doneStatus}(t),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}));const a=document.createElement("div");a.classList.add("title-box"),r.appendChild(a);const c=document.createElement("input");c.classList.add("rendered-task-title"),c.setAttribute("readonly","readonly"),c.value=t.title,a.appendChild(c),c.addEventListener("dblclick",(()=>{c.classList.add("editable"),c.focus(),c.readOnly=!1})),c.addEventListener("click",(()=>{o.click()})),c.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),d.click())}));const s=document.createElement("p");s.classList.add("rendered-notes"),a.appendChild(s);const i=document.createElement("p");i.classList.add("rendered-date"),a.appendChild(i);const d=document.createElement("button");d.textContent="edit",r.appendChild(d),d.addEventListener("click",(()=>{!function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(c,t),n(e)}));const l=document.createElement("button");l.textContent="delete",r.appendChild(l);const u=t.id;l.addEventListener("click",(()=>{!function(t){const n=e.task.findIndex((e=>e.id===t));e.task.splice(n,1),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(u),n(e)}));const A=document.createElement("div");A.textContent="notes",A.classList.add("notes-div"),r.appendChild(A);const p=document.createElement("dialog");p.classList.add("modal"),document.body.appendChild(p);const m=document.createElement("div");p.appendChild(m);const f=document.createElement("form");f.classList.add("notes-form"),m.appendChild(f);const C=document.createElement("textarea");f.appendChild(C);const g=document.createElement("input");g.classList.add("date-input"),g.setAttribute("type","date"),f.appendChild(g);const v=document.createElement("button");v.textContent="confirm",f.appendChild(v),A.addEventListener("click",(()=>{p.showModal()})),b(t,s),y(t,i),v.addEventListener("click",(e=>{e.preventDefault();let n=C.value;!function(e,t){e.notes=t,localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(t,n);var r;r=g.value,t.dueDate=r,localStorage.setItem("storageProjectsArr",JSON.stringify(h)),console.log(t),p.close(),b(t,s),y(t,i)}))};function n(e){for(;E.firstChild;)E.firstChild.remove();e.task.forEach(t)}n(e)}function b(e,t){void 0!==e.notes&&(t.textContent=`${e.notes}`),console.log(`${e.notes}`)}function y(e,t){t.textContent=`${e.dueDate}`,console.log(`${e.dueDate}`)}E.classList.add("rendered-tasks");const k=document.querySelector(".project-section"),S=document.querySelector(".rendered-projects"),x=document.querySelector(".project-form");function B(e){const t=document.createElement("div");t.classList.add("rendered-div"),S.prepend(t);const n=document.createElement("input");n.setAttribute("type","checkbox"),e.doneStatus&&n.setAttribute("checked","checked"),t.appendChild(n),t.classList.add("project-rendered"),t.setAttribute("id",`${e.id}`);const r=document.createElement("input");r.setAttribute("readonly","readonly"),r.value=e.title,r.classList.add("rendered-project-title","rendered-title"),t.appendChild(r),r.addEventListener("dblclick",(()=>{r.classList.add("editable"),r.focus(),r.readOnly=!1})),t.addEventListener("click",(()=>{!function(e){for(;g.firstChild;)g.firstChild.remove();!function(e){const t=document.createElement("h2");t.textContent=e.title,g.appendChild(t);const n=document.createElement("form");g.appendChild(n);const r=document.createElement("button");r.classList.add("task-button"),r.textContent="add",n.appendChild(r);const o=document.createElement("input");o.classList.add("task-title"),n.appendChild(o),g.appendChild(E),r.addEventListener("click",(t=>{t.preventDefault(),""!==o.value&&(function(e){const t=document.querySelector(".task-title").value,n=document.querySelector(".task-date").value,r=new C(t,n);console.log(h),e.task.push(r),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(e),v(e)),o.value=""}))}(e)}(e),v(e)}));const o=document.createElement("button");o.textContent="edit",o.addEventListener("click",(()=>{!function(e,t){t.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(r,e),j()})),r.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),o.click())})),t.appendChild(o);const a=document.createElement("button");a.textContent="delete",t.appendChild(a),n.addEventListener("click",(t=>{t.stopPropagation(),e.toggleDoneStatus(),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}));const c=e.id;a.addEventListener("click",(()=>{!function(e){const t=h.findIndex((t=>t.id===e));h.splice(t,1),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(c),j()}))}function j(){for(;S.firstChild;)S.firstChild.remove();console.log(h),h.forEach(B)}k.appendChild(x),k.appendChild(S);const L=document.querySelector(".add-btn"),I=document.querySelector(".project-title");j(),L.addEventListener("click",(e=>{e.preventDefault(),""!==I.value&&(function(){const e=document.querySelector(".project-title").value,t=document.querySelector(".project-date").value,n=new f(e,t);h.push(n),console.log(n),localStorage.setItem("storageProjectsArr",JSON.stringify(h))}(),j(),I.value="")})),I.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),L.click())}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,