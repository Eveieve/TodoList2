(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>C});var r=t(537),o=t.n(r),a=t(645),A=t.n(a),d=t(667),i=t.n(d),s=new URL(t(613),t.b),c=new URL(t(53),t.b),l=A()(o()),p=i()(s),u=i()(c);l.push([e.id,":root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104);\n  --light-grey: rgba(169, 174, 183, 0.5);\n  --background:rgb(246, 248, 249);\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n box-sizing: border-box;\n/* border: 1px solid salmon; */\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.main-container {\n  background-color: var(--background);\n  display: flex;\n  flex-direction: column;\n    width: 70rem;\n    background-color: rgb(255, 255, 255);\n    height:45rem;\n    border-radius: 1rem;\n    padding: 1.5rem;\nbox-shadow: rgba(169, 174, 183, 0.5) 1px 1px 2px 2px;\n\n  }\n  h1 {\n    margin: 0;\n    display: flex;\n    /* justify-content: center; */\n    align-items: center;\n    color: var(--blue);\n  }\n  h1:hover{\n    zoom: 120%;\n  }\n  .project-section {\n    /* overflow: scroll; */\n    background-color:white;\n   height: 100%;\n   display: flex;\n   flex-direction: column;\n   gap: 1rem;\n   padding: 1rem;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    gap: 1rem;\n   /* height: 100%; */\n   \n  }\n/* each task and project */\n.rendered-task,\n.rendered-project{\n  display: flex;\n  width: 100%;\n  align-items: center;\n  width: 23rem;\n  height: min-content;\n  border-radius: .3rem;\n  padding: .3rem;\n gap: .5rem;\n /* cursor: pointer; */\n}\n.checkbox-checked{\n  text-decoration: line-through;\n}\n\n\n.rendered-task:hover,\n.rendered-project:hover{\nbox-shadow: rgba(169, 174, 183, 0.5) 0px 1px 2px 0px;\n/* background-color: var(--light-grey); */\n}\n.rendered-project:hover img {\n  opacity: .6;\n}\n\n.rendered-task:hover img {\n/* background-color: var(--light-grey); */\nopacity: .6;\n  \n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 100%;\n\n  }\n  .task-section{\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n  }\n\n  /* task box containing title&notes&date */\n.title-box{\nwidth: 15rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n}\n.rendered-notes{\n  overflow:hidden;\n  white-space: nowrap;\n text-overflow: ellipsis; \n  color: var(--grey);\n}\n.rendered-date {\n  color: var(--grey);\n  font-size: .8rem;\n}\n\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  width: 100%;\n  border-style: none;\n border-radius: .5rem;\n padding: .7rem;\n\n}\ninput.project-title:hover,\ninput.project-title:focus {\n  background-color: var(--light-grey);\n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n border-radius: .5rem;\n padding: .7rem;\n width: 70%;\n}\n.task-input:hover,\n.task-input:focus {\n  background-color: var(--light-grey);\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("+p+");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("+u+');\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n border-radius: .2rem;\n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\npadding: .3rem;\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  box-sizing: content-box; \n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n  width: 12rem;\n  height: 10rem;\n }\ntextarea {\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n\n  height: 8rem;\n}\ntextarea:focus{\n  outline: none;\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n}\n\n.edit-btn {\n  display: none;\n}\n.delete-btn{\n\nheight: 20px;\nwidth: 20px;\nopacity: 0;\nborder-radius: 2px;\n}\n\n.delete-btn:hover {\n  background-color: var(--light-grey);\n  }\n  \n.notes-div {\n  height: 19px;\n  width: 19px;\n  opacity: 0;\n  border-radius: 2px;\n}\n.notes-div:hover {\n  background-color: var(--light-grey);\n\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,gCAAgC;EAChC,wBAAwB;EACxB,sCAAsC;EACtC,+BAA+B;AACjC;AACA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;;AAEX;AACA;CACC,sBAAsB;AACvB,8BAA8B;AAC9B;AACA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;AACA;EACE,mCAAmC;EACnC,aAAa;EACb,sBAAsB;IACpB,YAAY;IACZ,oCAAoC;IACpC,YAAY;IACZ,mBAAmB;IACnB,eAAe;AACnB,oDAAoD;;EAElD;EACA;IACE,SAAS;IACT,aAAa;IACb,6BAA6B;IAC7B,mBAAmB;IACnB,kBAAkB;EACpB;EACA;IACE,UAAU;EACZ;EACA;IACE,sBAAsB;IACtB,sBAAsB;GACvB,YAAY;GACZ,aAAa;GACb,sBAAsB;GACtB,SAAS;GACT,aAAa;EACd;;EAEA;IACE,aAAa;IACb,SAAS;EACX;;AAEF;;EAEE,aAAa;EACb,SAAS;EACT,sBAAsB;AACxB;;EAEE;IACE,uBAAuB;IACvB,aAAa;IACb,8BAA8B;IAC9B,SAAS;GACV,kBAAkB;;EAEnB;AACF,0BAA0B;AAC1B;;EAEE,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,oBAAoB;EACpB,cAAc;CACf,UAAU;CACV,qBAAqB;AACtB;AACA;EACE,6BAA6B;AAC/B;;;AAGA;;AAEA,oDAAoD;AACpD,yCAAyC;AACzC;AACA;EACE,WAAW;AACb;;AAEA;AACA,yCAAyC;AACzC,WAAW;;AAEX;EACE,yCAAyC;EACzC;;IAEE,eAAe;GAChB,kBAAkB;EACnB,WAAW;;EAEX;EACA;IACE,cAAc;IACd,aAAa;IACb,sBAAsB;IACtB,SAAS;;EAEX;;EAEA,yCAAyC;AAC3C;AACA,YAAY;AACZ,yBAAyB;AACzB;AACA;;EAEE,SAAS;AACX;AACA;EACE,eAAe;EACf,mBAAmB;CACpB,uBAAuB;EACtB,kBAAkB;AACpB;AACA;EACE,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;EACnB,0CAA0C;AAC5C;AACA;EACE,WAAW;EACX,kBAAkB;CACnB,oBAAoB;CACpB,cAAc;;AAEf;AACA;;EAEE,mCAAmC;AACrC;AACA;EACE,kBAAkB;AACpB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,6BAA6B;CAC9B,oBAAoB;CACpB,cAAc;CACd,UAAU;AACX;AACA;;EAEE,mCAAmC;AACrC;AACA;EACE,aAAa;EACb,yDAAqC;EACrC,4BAA4B;EAC5B,kBAAkB;EAClB,8FAA8F;AAChG;AACA;EACE,yDAA4C;EAC5C,4BAA4B;AAC9B;AACA;EACE,oCAAoC;CACrC,oBAAoB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;AACA,WAAW;AACX,yBAAyB;AACzB,cAAc;;AAEd;AACA;EACE,UAAU;AACZ;AACA;EACE,uBAAuB;EACvB,8BAA8B;EAC9B,oBAAoB;EACpB,YAAY;EACZ,aAAa;CACd;AACD;EACE,8BAA8B;EAC9B,oBAAoB;;EAEpB,YAAY;AACd;AACA;EACE,aAAa;EACb,8BAA8B;EAC9B,oBAAoB;AACtB;;AAEA;EACE,aAAa;AACf;AACA;;AAEA,YAAY;AACZ,WAAW;AACX,UAAU;AACV,kBAAkB;AAClB;;AAEA;EACE,mCAAmC;EACnC;;AAEF;EACE,YAAY;EACZ,WAAW;EACX,UAAU;EACV,kBAAkB;AACpB;AACA;EACE,mCAAmC;;AAErC",sourcesContent:[':root {\n  --blue: rgb(83, 127, 231);\n  --skyblue: rgb(192, 238, 242);\n  --light-blue: rgb(192, 238, 242);\n  --grey: rgb(95, 99, 104);\n  --light-grey: rgba(169, 174, 183, 0.5);\n  --background:rgb(246, 248, 249);\n}\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n \n}\n* {\n box-sizing: border-box;\n/* border: 1px solid salmon; */\n}\nbody {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.main-container {\n  background-color: var(--background);\n  display: flex;\n  flex-direction: column;\n    width: 70rem;\n    background-color: rgb(255, 255, 255);\n    height:45rem;\n    border-radius: 1rem;\n    padding: 1.5rem;\nbox-shadow: rgba(169, 174, 183, 0.5) 1px 1px 2px 2px;\n\n  }\n  h1 {\n    margin: 0;\n    display: flex;\n    /* justify-content: center; */\n    align-items: center;\n    color: var(--blue);\n  }\n  h1:hover{\n    zoom: 120%;\n  }\n  .project-section {\n    /* overflow: scroll; */\n    background-color:white;\n   height: 100%;\n   display: flex;\n   flex-direction: column;\n   gap: 1rem;\n   padding: 1rem;\n  }\n  \n  .project-form {\n    display: flex;\n    gap:.5rem;\n  }\n\n.rendered-projects,\n.rendered-tasks {\n  display: flex;\n  gap: 1rem;\n  flex-direction: column;\n}\n\n  .sec-container {\n    background-color: white;\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    gap: 1rem;\n   /* height: 100%; */\n   \n  }\n/* each task and project */\n.rendered-task,\n.rendered-project{\n  display: flex;\n  width: 100%;\n  align-items: center;\n  width: 23rem;\n  height: min-content;\n  border-radius: .3rem;\n  padding: .3rem;\n gap: .5rem;\n /* cursor: pointer; */\n}\n.checkbox-checked{\n  text-decoration: line-through;\n}\n\n\n.rendered-task:hover,\n.rendered-project:hover{\nbox-shadow: rgba(169, 174, 183, 0.5) 0px 1px 2px 0px;\n/* background-color: var(--light-grey); */\n}\n.rendered-project:hover img {\n  opacity: .6;\n}\n\n.rendered-task:hover img {\n/* background-color: var(--light-grey); */\nopacity: .6;\n  \n}\n  /* both rendered tasks & projects style */\n  .rendered-project-title,\n  .rendered-task-title {\n    font-size: 1rem;\n   border-style: none;\n  width: 100%;\n\n  }\n  .task-section{\n    padding: .5rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n\n  }\n\n  /* task box containing title&notes&date */\n.title-box{\nwidth: 15rem;\noverflow-wrap: break-word;\n}\n.rendered-date,\n.rendered-notes{\n  margin: 0;\n}\n.rendered-notes{\n  overflow:hidden;\n  white-space: nowrap;\n text-overflow: ellipsis; \n  color: var(--grey);\n}\n.rendered-date {\n  color: var(--grey);\n  font-size: .8rem;\n}\n\ninput:focus {\n  outline-style: none;\n  /* border: 2px solid rgb(124, 164, 250); */\n}\ninput.project-title{\n  width: 100%;\n  border-style: none;\n border-radius: .5rem;\n padding: .7rem;\n\n}\ninput.project-title:hover,\ninput.project-title:focus {\n  background-color: var(--light-grey);\n}\ninput.project-title:hover::placeholder  {\n  color: var(--blue);\n}\n.task-input:hover::placeholder {\n  color: var(--blue);\n}\n.task-input {\n  border: 2px solid transparent;\n border-radius: .5rem;\n padding: .7rem;\n width: 70%;\n}\n.task-input:hover,\n.task-input:focus {\n  background-color: var(--light-grey);\n}\n.add-btn {\n  width: 2.5rem;\n  background-image: url("svg/plus.svg");\n  background-repeat: no-repeat;\n  border-style: none;\n  filter: invert(45%) sepia(63%) saturate(879%) hue-rotate(193deg) brightness(95%) contrast(90%);\n}\n.add-btn:hover {\n  background-image: url("svg/plus-circle.svg");\n  background-repeat: no-repeat;\n}\n.editable:focus {\n  border: 1px solid rgb(124, 164, 250);\n border-radius: .2rem;\n}\n\ninput {\n  cursor: pointer;\n}\n\ninput[type="checkbox"]{\nwidth: 2rem;\naccent-color: var(--blue);\npadding: .3rem;\n\n}\ninput[type="checkbox"]:hover{\n  zoom: 120%;\n}\n.modal{\n  box-sizing: content-box; \n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n  width: 12rem;\n  height: 10rem;\n }\ntextarea {\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n\n  height: 8rem;\n}\ntextarea:focus{\n  outline: none;\n  border: 1px solid  var(--blue);\n  border-radius: .3rem;\n}\n\n.edit-btn {\n  display: none;\n}\n.delete-btn{\n\nheight: 20px;\nwidth: 20px;\nopacity: 0;\nborder-radius: 2px;\n}\n\n.delete-btn:hover {\n  background-color: var(--light-grey);\n  }\n  \n.notes-div {\n  height: 19px;\n  width: 19px;\n  opacity: 0;\n  border-radius: 2px;\n}\n.notes-div:hover {\n  background-color: var(--light-grey);\n\n}\n'],sourceRoot:""}]);const C=l},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var A={};if(r)for(var d=0;d<this.length;d++){var i=this[d][0];null!=i&&(A[i]=!0)}for(var s=0;s<e.length;s++){var c=[].concat(e[s]);r&&A[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),n.push(c))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},A=[],d=0;d<e.length;d++){var i=e[d],s=r.base?i[0]+r.base:i[0],c=a[s]||0,l="".concat(s," ").concat(c);a[s]=c+1;var p=t(l),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var C=o(u,r);r.byIndex=d,n.splice(d,0,{identifier:l,updater:C,references:1})}A.push(l)}return A}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var A=0;A<a.length;A++){var d=t(a[A]);n[d].references--}for(var i=r(e,o),s=0;s<a.length;s++){var c=t(a[s]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},53:(e,n,t)=>{e.exports=t.p+"057fbbe813d06c74ac0c.svg"},613:(e,n,t)=>{e.exports=t.p+"3cffe9a515498593b872.svg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e=t(379),n=t.n(e),r=t(795),o=t.n(r),a=t(569),A=t.n(a),d=t(565),i=t.n(d),s=t(216),c=t.n(s),l=t(589),p=t.n(l),u=t(28),C={};C.styleTagTransform=p(),C.setAttributes=i(),C.insert=A().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=c(),n()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;class g{constructor(e,n){this.title=e,this.dueDate=n,this.doneStatus=!1,this.id=crypto.randomUUID(),this.task=[]}toggleDoneStatus(){this.doneStatus=!this.doneStatus}}const m=JSON.parse(localStorage.getItem("storageProjectsArr"))?.map((e=>Object.assign(new g,e)))??[];class h extends g{constructor(e,n){super(e,n),this.dueDate="",this.notes=""}}const b=t.p+"de0bb67a90c508546224.svg",E=t.p+"c846b91bc57c7f0f2387.svg",f=document.querySelector(".task-section"),v=document.createElement("div");function B(e){const n=n=>{const r=document.createElement("div");r.classList.add("rendered-task"),r.setAttribute("id",`${n.id}`),v.prepend(r);const o=document.createElement("input");o.setAttribute("type","checkbox"),n.doneStatus&&o.setAttribute("checked","checked"),r.appendChild(o),o.addEventListener("click",(()=>{!function(e){e.doneStatus=!e.doneStatus}(n),localStorage.setItem("storageProjectsArr",JSON.stringify(m))}));const a=document.createElement("div");a.classList.add("title-box"),r.appendChild(a);const A=document.createElement("input");A.classList.add("rendered-task-title"),A.setAttribute("readonly","readonly"),A.value=n.title,a.appendChild(A),A.addEventListener("dblclick",(()=>{A.classList.add("editable"),A.focus(),A.readOnly=!1})),A.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),s.click())}));const d=document.createElement("p");d.classList.add("rendered-notes"),a.appendChild(d);const i=document.createElement("p");i.classList.add("rendered-date"),a.appendChild(i);const s=document.createElement("button");s.textContent="edit",s.classList.add("edit-btn"),r.appendChild(s),s.addEventListener("click",(()=>{!function(e,n){n.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(A,n),t(e)}));const c=document.createElement("img");c.classList.add("delete-btn"),c.src=b,r.appendChild(c);const l=n.id;r.addEventListener("click",(n=>{"delete-btn"===n.target.className&&(n.target.closest(".rendered-task"),function(n){const t=e.task.findIndex((e=>e.id===n));e.task.splice(t,1),localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(l),t(e))}));const p=document.createElement("img");p.src=E,p.classList.add("notes-div"),r.appendChild(p);const u=document.createElement("dialog");u.classList.add("modal"),document.body.appendChild(u);const C=document.createElement("div");u.appendChild(C);const g=document.createElement("form");g.classList.add("notes-form"),C.appendChild(g);const h=document.createElement("textarea");h.textContent=`${n.notes}`,g.appendChild(h);const f=document.createElement("input");f.classList.add("date-input"),f.setAttribute("type","date"),f.value=`${n.dueDate}`,g.appendChild(f);const B=document.createElement("button");B.textContent="save",g.appendChild(B),p.addEventListener("click",(()=>{u.showModal()})),B.addEventListener("click",(e=>{e.preventDefault();let t=h.value;!function(e,n){e.notes=n,localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(n,t);var r;r=f.value,n.dueDate=r,localStorage.setItem("storageProjectsArr",JSON.stringify(m)),console.log(n),u.close(),y(n,d),k(n,i)})),y(n,d),k(n,i)};function t(e){for(;v.firstChild;)v.firstChild.remove();e.task.forEach(n)}t(e)}function y(e,n){""!==e.notes&&(n.textContent=`${e.notes}`)}function k(e,n){""!==e.dueDate&&(n.textContent=`${e.dueDate}`)}v.classList.add("rendered-tasks");const x=document.querySelector(".project-section"),w=document.querySelector(".rendered-projects"),S=document.querySelector(".project-form");function j(e){const n=document.createElement("div");n.classList.add("rendered-project"),w.prepend(n),n.classList.add("project-rendered"),n.setAttribute("id",`${e.id}`);const t=document.createElement("input");t.setAttribute("readonly","readonly"),t.value=e.title,t.classList.add("rendered-project-title","rendered-title"),n.appendChild(t),t.addEventListener("dblclick",(()=>{t.classList.add("editable"),t.focus(),t.readOnly=!1})),n.addEventListener("click",(n=>{(n.target==n.currentTarget||n.target.classList.contains("rendered-project-title"))&&(function(e){for(;f.firstChild;)f.firstChild.remove();!function(e){const n=document.createElement("h2");n.textContent=e.title,f.appendChild(n);const t=document.createElement("form");f.appendChild(t);const r=document.createElement("input");r.setAttribute("placeholder","Add a task"),r.classList.add("task-input"),t.appendChild(r),f.appendChild(v),t.addEventListener("keypress",(n=>{"task-input"===n.target.className&&"Enter"===n.key&""!==r.value&&(n.preventDefault(),function(e){const n=document.querySelector(".task-input").value,t=new h(n);console.log(m),e.task.push(t),localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(e),B(e),r.value="")}))}(e)}(e),B(e))})),t.addEventListener("keypress",(n=>{"Enter"===n.key&&(n.preventDefault(),function(e,n){n.title=e.value,localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(t,e),I())}));const r=document.createElement("img");r.classList.add("delete-btn"),r.src=b,n.appendChild(r);const o=e.id;r.addEventListener("click",(()=>{!function(e){const n=m.findIndex((n=>n.id===e));m.splice(n,1),localStorage.setItem("storageProjectsArr",JSON.stringify(m))}(o),I()}))}function I(){for(;w.firstChild;)w.firstChild.remove();console.log(m),m.forEach(j)}document.querySelector(".task-section"),x.appendChild(S),x.appendChild(w),document.querySelector(".add-btn");const L=document.querySelector(".project-title");I();const D=()=>{const e=document.querySelector(".project-title").value,n=new g(e);m.push(n),console.log(n),localStorage.setItem("storageProjectsArr",JSON.stringify(m))};L.addEventListener("keypress",(e=>{"Enter"===e.key&&(e.preventDefault(),D(),I(),L.value="")}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,